# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.


ROOT_DIR = ..
INCLUDE_DIR = $(ROOT_DIR)/include
SRC_DIR = $(ROOT_DIR)/src
TESTS_DIR = .
# AR = xiar
MKLPATH   = $(MKLROOT)/lib/intel64
MKLINCLUDE = $(MKLROOT)/include

#dynamic linking
LAPACKLIB = -ldl -L$(MKLPATH) -I$(MKLINCLUDE) -mkl=sequential

CXX = icpc

GTEST_DIR = /home/vladimir/compile/gtest-1.7.0

# Where to find user code.
USER_DIR = .
  
# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -pthread -std=c++11 -std=c++0x

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
# TESTS = sample1_unittest
TESTS = test_common test_susceptibility test_mean_field test_lapack_wrapper

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.
all : $(TESTS)

clean:
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
	$(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
        $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

common.o : $(SRC_DIR)/common.cc $(INCLUDE_DIR)/common.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/common.cc

susceptibility.o : common.o $(SRC_DIR)/susceptibility.cc $(INCLUDE_DIR)/susceptibility.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/susceptibility.cc

susceptibility_sc.o : common.o $(SRC_DIR)/susceptibility_sc.cc $(INCLUDE_DIR)/susceptibility_sc.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/susceptibility_sc.cc

susceptibility_square.o : common.o $(SRC_DIR)/susceptibility_square.cc $(INCLUDE_DIR)/susceptibility_square.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/susceptibility_square.cc

susceptibility_sc_square.o : common.o $(SRC_DIR)/susceptibility_sc_square.cc $(INCLUDE_DIR)/susceptibility_sc_square.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/susceptibility_sc_square.cc

mean_field.o : common.o $(SRC_DIR)/mean_field.cc $(INCLUDE_DIR)/mean_field.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LAPACKLIB) -I$(INCLUDE_DIR) -c $(SRC_DIR)/mean_field.cc

test_common.o : $(TESTS_DIR)/test_common.cc \
                      $(INCLUDE_DIR)/common.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(INCLUDE_DIR) $(LAPACKLIB) -c $(TESTS_DIR)/test_common.cc

test_susceptibility.o : $(TESTS_DIR)/test_susceptibility.cc \
                      $(INCLUDE_DIR)/common.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(INCLUDE_DIR) $(LAPACKLIB) -c $(TESTS_DIR)/test_susceptibility.cc

test_susceptibility_sc.o : $(TESTS_DIR)/test_susceptibility_sc.cc \
                      $(INCLUDE_DIR)/common.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(INCLUDE_DIR) $(LAPACKLIB) -c $(TESTS_DIR)/test_susceptibility_sc.cc

test_lapack_wrapper.o : $(TESTS_DIR)/test_lapack_wrapper.cc \
                      $(INCLUDE_DIR)/lapack_wrapper.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(INCLUDE_DIR) $(LAPACKLIB) -c $(TESTS_DIR)/test_lapack_wrapper.cc


test_mean_field.o : $(TESTS_DIR)/test_mean_field.cc \
                      $(INCLUDE_DIR)/common.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(INCLUDE_DIR) $(LAPACKLIB) -c $(TESTS_DIR)/test_mean_field.cc



test_common : common.o test_common.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -I$(INCLUDE_DIR) $(LAPACKLIB) $^ -o $@

test_lapack_wrapper : lapack_wrapper.o test_lapack_wrapper.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -I$(INCLUDE_DIR) $(LAPACKLIB) $^ -o $@


test_susceptibility : common.o susceptibility.o susceptibility_sc.o susceptibility_square.o susceptibility_sc_square.o test_susceptibility.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -I$(INCLUDE_DIR) $(LAPACKLIB) $^ -o $@

test_mean_field : common.o mean_field.o lapack_wrapper.o test_mean_field.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread -I$(INCLUDE_DIR) $(LAPACKLIB) $^ -o $@


lapack_wrapper.o: $(SRC_DIR)/lapack_wrapper.cc $(INCLUDE_DIR)/lapack_wrapper.h
	$(CXX) $(CXXFLAGS) -c -I$(INCLUDE_DIR) $(SRC_DIR)/lapack_wrapper.cc -o $(TESTS_DIR)/lapack_wrapper.o
